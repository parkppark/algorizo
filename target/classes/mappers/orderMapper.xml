<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.algorizo.erp.orderMapper">

	<resultMap id="orderResultMap"
		type="co.algorizo.erp.order.OrderDTO">
		<id property="o_no" column="o_no" />
		<result property="o_regdate" column="o_regdate" />
		<result property="o_code" column="o_code" />
		<result property="o_state" column="o_state" />
		<result property="o_moddate" column="o_moddate" />
		<result property="o_qty" column="o_qty" />
		<result property="o_delivery" column="o_delivery" />


		<association property="member"
			javaType="co.algorizo.erp.register.dto.MemberDTO">
			<id property="m_id" column="member_m_id" />
			<result property="m_name" column="m_name" />
		</association>

		<association property="product"
			javaType="co.algorizo.erp.product.ProductDTO">
			<id property="p_id" column="product_p_id" />
			<result property="p_name" column="p_name" />
			<result property="p_price" column="p_price" />
			<!-- 제품 관련 필드 -->
		</association>

		<association property="company"
			javaType="co.algorizo.erp.company.CompanyDTO">
			<id property="cp_id" column="company_cp_id" />
			<result property="cp_name" column="cp_name" />
		</association>

		<association property="stock"
			javaType="co.algorizo.erp.stock.stockDTO">
			<id property="s_id" column="stock_s_id" />
			<result property="s_quantity" column="s_quantity" />
		</association>

		<association property="dept"
			javaType="co.algorizo.erp.dept.dto.DeptDTO">
			<id property="d_id" column="dept_d_id" />
			<result property="team" column="team" />
		</association>
		

		
	</resultMap>


	<select id="getAllOrders" resultMap="orderResultMap">
		SELECT o.*, m.m_name,
		p.p_name, p.p_price, cp.cp_name, s.s_quantity, d.team
		FROM `order` o
		JOIN member m ON o.member_m_id = m.m_id
		JOIN product p ON o.product_p_id = p.p_id
		JOIN company cp ON o.company_cp_id = cp.cp_id
		JOIN stock s ON o.stock_s_id = s.s_id
		JOIN dept d ON o.dept_d_id = d.d_id
		where o.del = 0
	</select>

	<insert id="register" parameterType="java.util.Map">
		insert into `order`(o_regdate, o_code, o_qty, member_m_id, product_p_id, company_cp_id, stock_s_id, dept_d_id)
		values (now(), #{o_code}, #{o_qty}, #{member_m_id},#{product_p_id},#{company_cp_id}, (SELECT s_id FROM stock WHERE product_p_id = #{product_p_id} LIMIT 1),
		(SELECT d_id FROM dept WHERE member_m_id = #{member_m_id} LIMIT 1))
	</insert>


	<select id="getOrderDetail" resultMap="orderResultMap">
		select
		o.*,
		m.m_name, p.p_name, p.p_price, cp.cp_name, s.s_quantity, d.team
		FROM `order` o
		JOIN member m ON o.member_m_id = m.m_id
		JOIN product p ON o.product_p_id = p.p_id
		JOIN company cp ON o.company_cp_id = cp.cp_id
		JOIN stock s ON o.stock_s_id = s.s_id
		JOIN dept d ON o.dept_d_id = d.d_id
		WHERE o.o_code = #{o_code}  <!-- o_code를 
			기준으로 상세 정보 조회 -->
	</select>

	<update id="updateOrder" parameterType="java.util.Map">
		update `order` set
		o_moddate = now(), o_state = #{o_state}, o_qty = #{o_qty} where
		o_code=#{o_code}
	</update>

	<update id="deleteOrder" parameterType="String">
		UPDATE `order`
		SET del = 1
		WHERE o_code = #{o_code}
	</update>

	<select id="getLastOrderCode" resultType="String">
		SELECT o_code FROM
		`order` ORDER BY o_no DESC LIMIT 1;
	</select>

</mapper>